name: Deploy a static site on s3 bucket with Terraform

on:
  push:
    branches:
      - main
      - develop
jobs:
  terraform-init-fmt-validate-plan:
    runs-on: ubuntu-latest
    container:
      image: mrtnsgs/nodejs-lts-aws:1.0
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Setting up aws credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.4
      - name: Set terraform workspace
        run: |
          if [ "${{github.ref}}" == "refs/heads/main" ]; then
            echo "prod" >> $TF_WORKSPACE;
          else
            echo "dev" >> $TF_WORKSPACE;
          fi

      - name: Run terraform init
        run: terraform init -backend=true -backend-config="backend.hcl"
        env:
          TF_WORKSPACE: $TERRAFORM_ENV

      - name: Run Terraform fmt
        run: terraform fmt -recursive

      - name: Terraform validate
        run: terraform validate

      - name: Run Terraform plan
        run: terraform plan -no-color
        continue-on-error: true

      #- uses: actions/github-script@0.9.0
      #  if: github.event_name == 'pull_request'
      #  env:
      #    PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        #with:
        #  github-token: ${{ secrets.GITHUB_TOKEN }}
        #  script: |
        #    const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
        #    #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
        #    #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
        #    #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        #    <details><summary>Show Plan</summary>
        #    \`\`\`\n
        #    ${process.env.PLAN}
        #    \`\`\`
        #    </details>
        #    *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
        #    github.issues.createComment({
        #      issue_number: context.issue.number,
        #      owner: context.repo.owner,
        #      repo: context.repo.repo,
        #      body: output
        #    })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
